@using System.Net.Http
@inject IConfiguration Configuration

@page "/users"
@attribute [StreamRendering]

<PageTitle>All users</PageTitle>

<h1>All users</h1>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Email</th>
                <th>City</th>
                <th>Phone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                   @*  <td>@user.City</td> *@
                    <td>@user.PhoneNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}

  
@code {
    [Inject]
    private HttpClient? HttpClient { get; set; }

    private string? ErrorMessage { get; set; }

    private User[]? users; 

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var functionKey = Configuration["AzureFunctionKeyUsers"];
            var response = await HttpClient.GetAsync($"https://userprovider-silicon-jsb.azurewebsites.net/api/GetUsers{functionKey}");
            if (response.IsSuccessStatusCode)
            {
                users = await response.Content.ReadFromJsonAsync<User[]>();
            }
            else
            {
                ErrorMessage = "Failed to fetch users. Please try again later.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred while fetching users. " + ex.Message;
        }
    }

    private class User
    {
        public int Id { get; set; }
        public string FirstName { get; set; } = null!;
        public string LastName { get; set; } = null!;
        public string Email { get; set; } = null!;
        // public string City { get; set; } = null!;
        public string PhoneNumber { get; set; } = null!;
    }
}

